<?php

/**
 * This is the model base class for the table "tbl_documentary".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Documentary".
 *
 * Columns in table "tbl_documentary" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $number
 * @property string $shortcut
 * @property string $abstract
 * @property string $signed_user
 * @property string $keywords
 * @property integer $status
 * @property integer $date_recieve
 * @property string $number_doc_finish
 * @property string $number_doc_send
 * @property string $reciever
 * @property integer $time_in_doc
 * @property string $country
 * @property string $did_by
 * @property string $obj_name
 *
 */
abstract class BaseDocumentary extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tbl_documentary';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Documentary|Documentaries', $n);
	}

	public static function representingColumn() {
		return 'number';
	}

	public function rules() {
		return array(
			array('status, date_recieve, time_in_doc', 'numerical', 'integerOnly'=>true),
			array('number, signed_user, number_doc_finish, number_doc_send, reciever', 'length', 'max'=>255),
			array('shortcut, abstract, keywords, country, did_by, obj_name', 'safe'),
			array('number, shortcut, abstract, signed_user, keywords, status, date_recieve, number_doc_finish, number_doc_send, reciever, time_in_doc, country, did_by, obj_name', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, number, shortcut, abstract, signed_user, keywords, status, date_recieve, number_doc_finish, number_doc_send, reciever, time_in_doc, country, did_by, obj_name', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'number' => Yii::t('app', 'Number'),
			'shortcut' => Yii::t('app', 'Shortcut'),
			'abstract' => Yii::t('app', 'Abstract'),
			'signed_user' => Yii::t('app', 'Signed User'),
			'keywords' => Yii::t('app', 'Keywords'),
			'status' => Yii::t('app', 'Status'),
			'date_recieve' => Yii::t('app', 'Date Recieve'),
			'number_doc_finish' => Yii::t('app', 'Number Doc Finish'),
			'number_doc_send' => Yii::t('app', 'Number Doc Send'),
			'reciever' => Yii::t('app', 'Reciever'),
			'time_in_doc' => Yii::t('app', 'Time In Doc'),
			'country' => Yii::t('app', 'Country'),
			'did_by' => Yii::t('app', 'Did By'),
			'obj_name' => Yii::t('app', 'Obj Name'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('number', $this->number, true);
		$criteria->compare('shortcut', $this->shortcut, true);
		$criteria->compare('abstract', $this->abstract, true);
		$criteria->compare('signed_user', $this->signed_user, true);
		$criteria->compare('keywords', $this->keywords, true);
		$criteria->compare('status', $this->status);
		$criteria->compare('date_recieve', $this->date_recieve);
		$criteria->compare('number_doc_finish', $this->number_doc_finish, true);
		$criteria->compare('number_doc_send', $this->number_doc_send, true);
		$criteria->compare('reciever', $this->reciever, true);
		$criteria->compare('time_in_doc', $this->time_in_doc);
		$criteria->compare('country', $this->country, true);
		$criteria->compare('did_by', $this->did_by, true);
		$criteria->compare('obj_name', $this->obj_name, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}